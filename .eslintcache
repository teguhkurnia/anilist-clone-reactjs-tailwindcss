[{"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/index.js":"1","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/App.js":"2","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/context/ModalContext.js":"3","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Footer.js":"4","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Modal.js":"5","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Navbar.js":"6","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Filter.js":"7","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Wrapper.js":"8","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Home.js":"9","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Dropdown.js":"10","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Input.js":"11","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Dropdown2.js":"12","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/InputNumber.js":"13","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Textarea.js":"14","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/DatePicker.js":"15","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/ItemsWrapper.js":"16","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemList.js":"17","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemSekeleton.js":"18","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemSummary.js":"19","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/hooks/useClickOutside.js":"20","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Detail.js":"21","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/Overview.js":"22","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/Watch.js":"23","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/Character.js":"24","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/CharacterLists.js":"25","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/StaffLists.js":"26","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/Staff.js":"27"},{"size":465,"mtime":1608263355341,"results":"28","hashOfConfig":"29"},{"size":697,"mtime":1609458525412,"results":"30","hashOfConfig":"29"},{"size":499,"mtime":1608512752509,"results":"31","hashOfConfig":"29"},{"size":907,"mtime":1608197824445,"results":"32","hashOfConfig":"29"},{"size":5378,"mtime":1609289471863,"results":"33","hashOfConfig":"29"},{"size":2099,"mtime":1609292411943,"results":"34","hashOfConfig":"29"},{"size":6255,"mtime":1609205814495,"results":"35","hashOfConfig":"29"},{"size":566,"mtime":1609205578794,"results":"36","hashOfConfig":"29"},{"size":685,"mtime":1609205991424,"results":"37","hashOfConfig":"29"},{"size":4173,"mtime":1609289285442,"results":"38","hashOfConfig":"29"},{"size":348,"mtime":1609205800225,"results":"39","hashOfConfig":"29"},{"size":2714,"mtime":1609205797778,"results":"40","hashOfConfig":"29"},{"size":1559,"mtime":1609205799405,"results":"41","hashOfConfig":"29"},{"size":456,"mtime":1609205800918,"results":"42","hashOfConfig":"29"},{"size":7489,"mtime":1609289887548,"results":"43","hashOfConfig":"29"},{"size":1929,"mtime":1609205982896,"results":"44","hashOfConfig":"29"},{"size":489,"mtime":1609206921599,"results":"45","hashOfConfig":"29"},{"size":478,"mtime":1609205884330,"results":"46","hashOfConfig":"29"},{"size":7395,"mtime":1609290495140,"results":"47","hashOfConfig":"29"},{"size":412,"mtime":1609289259557,"results":"48","hashOfConfig":"29"},{"size":11370,"mtime":1609461137713,"results":"49","hashOfConfig":"29"},{"size":10777,"mtime":1609460925116,"results":"50","hashOfConfig":"29"},{"size":1012,"mtime":1609459415757,"results":"51","hashOfConfig":"29"},{"size":1045,"mtime":1609460775583,"results":"52","hashOfConfig":"29"},{"size":1163,"mtime":1609460657217,"results":"53","hashOfConfig":"29"},{"size":662,"mtime":1609460943948,"results":"54","hashOfConfig":"29"},{"size":793,"mtime":1609461163149,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"5pkbt5",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"58"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/index.js",[],["123","124"],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/App.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/context/ModalContext.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Footer.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Modal.js",["125","126","127","128","129"],"import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport { ModalContext } from \"../../context/ModalContext\";\r\nimport Dropdown2 from \"../input/Dropdown2\";\r\nimport \"./modal.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport DatePicker from \"../input/DatePicker\";\r\nimport InputNumber from \"../input/InputNumber\";\r\nimport Textarea from \"../input/Textarea\";\r\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\r\n\r\nconst Modal = () => {\r\n  const { isOpen, setIsOpen, info } = useContext(ModalContext);\r\n  const [status, setStatus] = useState([\r\n    \"Watching\",\r\n    \"Plan to watch\",\r\n    \"Completed\",\r\n    \"Rewatching\",\r\n    \"Paused\",\r\n    \"Dropped\",\r\n  ]);\r\n  const [selectedStatus, setSelectedStatus] = useState(\"\");\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  useClickOutside(() => {\r\n    setIsOpen(false);\r\n  }, wrapperRef);\r\n  return (\r\n    <motion.div\r\n      class=\"bg-gray-900 bg-opacity-70 flex flex-col justify-center items-center py-10 sm:py-12 fixed z-20 top-0 bottom-0 right-0 left-0 overflow-y-auto-auto overflow-x-hidden\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.2 }}\r\n    >\r\n      <div\r\n        className=\"w-screen md:w-full lg:w-2/3 h-auto bg-gray-800 rounded mx-auto mt-72 lg:mt-0\"\r\n        ref={wrapperRef}\r\n      >\r\n        <div\r\n          className=\"header h-48 w-full banner-image relative\"\r\n          style={{ background: `url(${info.bannerImage})` }}\r\n        >\r\n          <div\r\n            className=\"close w-5 h-5 absolute right-3 top-3\"\r\n            onClick={() => {\r\n              document.body.classList.remove(\"overflow-hidden\");\r\n              return setIsOpen(false);\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 20 20\"\r\n              fill=\"white\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div className=\"content flex items-end h-full\">\r\n            <img\r\n              src={info.coverImage}\r\n              className=\"w-28 h-40 relative top-9 left-6\"\r\n            />\r\n            <div className=\"info flex justify-between w-full ml-5\">\r\n              <div className=\"py-3 px-6 text-white font-medium w-60 h-auto\">\r\n                {info.title}\r\n              </div>\r\n              <div className=\"flex text-white justify-between items-center w-32 py-5 pr-5\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                  className=\"h-7 w-7\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n                <button className=\"py-1 bg-blue-500 rounded px-3 focus:outline-none\">\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"px-10 py-14 w-full lg:w-4/5\">\r\n          <div className=\"row block lg:flex justify-between \">\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">Status</div>\r\n              <Dropdown2\r\n                items={status}\r\n                onSelected={setSelectedStatus}\r\n                name=\"Status\"\r\n                className=\"lg:w-52\"\r\n              />\r\n            </div>\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">Score</div>\r\n              <InputNumber step={0.5} max=\"10\" min=\"0\" className=\"lg:w-52\" />\r\n            </div>\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">\r\n                Episode Progress\r\n              </div>\r\n              <InputNumber step={1} max=\"999\" min=\"0\" className=\"lg:w-52\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row block lg:flex justify-between\">\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">\r\n                Start Date\r\n              </div>\r\n              <DatePicker className=\"lg:w-52\" />\r\n            </div>\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">\r\n                Finish Date\r\n              </div>\r\n              <DatePicker className=\"lg:w-52\" />\r\n            </div>\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">\r\n                Total Rewatches\r\n              </div>\r\n              <InputNumber step={1} min={0} max=\"999\" className=\"lg:w-52\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"title text-gray-400 font-medium my-2\">Notes</div>\r\n            <Textarea />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Navbar.js",["130"],"import React, { useState } from \"react\";\r\n\r\nconst Navbar = () => {\r\n  const [menus, setMenus] = useState([\r\n    \"Home\",\r\n    \"Profile\",\r\n    \"Anime List\",\r\n    \"Manga List\",\r\n    \"Browse\",\r\n    \"Forum\",\r\n  ]);\r\n  const menuList = menus.map((menu, index) => (\r\n    <li\r\n      key={index}\r\n      className=\"lg:mx-3 my-2 lg:py-4 font-semibold text-gray-500 hover:text-gray-200 cursor-pointer text-sm\"\r\n    >\r\n      {menu}\r\n    </li>\r\n  ));\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <nav className=\"bg-gray-800 w-full hidden\">\r\n      <div className=\"container lg:flex mx-auto lg:px-28  items-center h-full justify-between\">\r\n        <div className=\"brand flex justify-between items-center border-b lg:border-none border-gray-600 py-4 px-3  text-white\">\r\n          <a href=\"/\" className=\"text-2xl\">\r\n            TekAnime\r\n          </a>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            className=\"h-5 w-5 lg:hidden\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? (\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            ) : (\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            )}\r\n          </svg>\r\n        </div>\r\n        <ul\r\n          className={`${\r\n            open ? \"flex\" : \"hidden\"\r\n          } lg:flex px-3 py-2 lg:py-0 justify-between flex-col lg:flex-row`}\r\n        >\r\n          {menuList}\r\n        </ul>\r\n        <div className=\"w-30 hidden lg:block\">asd</div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Filter.js",["131","132","133","134"],"import React, { useState } from \"react\";\r\nimport Dropdown from \"../input/Dropdown\";\r\nimport Input from \"../input/Input\";\r\n\r\nconst Filter = () => {\r\n  const [items, setItems] = useState([\r\n    \"Action\",\r\n    \"Romance\",\r\n    \"Comedy\",\r\n    \"Adventure\",\r\n    \"Drama\",\r\n    \"Slice of Life\",\r\n    \"Fantasy\",\r\n    \"Supernatural\",\r\n    \"Horor\",\r\n    \"Mystery\",\r\n    \"Psychological\",\r\n    \"Sci-Fi\",\r\n    \"Mecha\",\r\n    \"Harem\",\r\n    \"Reverse Harem\",\r\n    \"Isekai\",\r\n    \"Reverse Isekai\",\r\n    \"Demons\",\r\n    \"Game\",\r\n    \"Ecchi\",\r\n    \"Historical\",\r\n    \"Kids\",\r\n    \"Martial Art\",\r\n    \"Josei\",\r\n    \"Cyberpunk\",\r\n    \"Post-Apocalyptic\",\r\n    \"Police\",\r\n    \"Parody\",\r\n    \"Music\",\r\n    \"School\",\r\n    \"Super Power\",\r\n    \"Space\",\r\n    \"Shounen\",\r\n    \"Shoujo\",\r\n    \"Seinen\",\r\n    \"Sports\",\r\n    \"Tragedy\",\r\n    \"Vampire\",\r\n    \"Yaoi/Shounen-Ai\",\r\n    \"Yuri/Shoujo-Ai\",\r\n    \"Magic\",\r\n    \"Military\",\r\n    \"Hentai\",\r\n  ]);\r\n  const [selectedCategory, setSelectedCategory] = useState([]);\r\n  const [years, setYear] = useState(() => {\r\n    let y = [];\r\n    for (let i = new Date().getFullYear(); i > 1992; i--) {\r\n      y.push(i.toString());\r\n    }\r\n    return y;\r\n  });\r\n  const [selectedYear, setSelectedYear] = useState(\"\");\r\n  const [seasons, setSeasons] = useState([\r\n    \"Winter\",\r\n    \"Spring\",\r\n    \"Summer\",\r\n    \"Fall\",\r\n  ]);\r\n  const [selectedSeason, setSelectedSeason] = useState(\"\");\r\n  const [formats, setFormats] = useState([\r\n    \"TV Show\",\r\n    \"Movie\",\r\n    \"TV Short\",\r\n    \"Special\",\r\n    \"OVA\",\r\n    \"ONA\",\r\n    \"Music\",\r\n  ]);\r\n  const [selectedFormats, setSelectedFormats] = useState([]);\r\n  return (\r\n    <div className=\"filter mb-10\">\r\n      <div className=\"flex justify-between\">\r\n        <div className=\"search\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Search\r\n          </div>\r\n          <Input type=\"text\" className=\"bg-gray-800 w-80 lg:w-full\" />\r\n        </div>\r\n        <div className=\"genres hidden lg:block\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Genres\r\n          </div>\r\n          <Dropdown\r\n            items={items}\r\n            onSelected={setSelectedCategory}\r\n            isMultiSelect\r\n          />\r\n        </div>\r\n        <div className=\"Year hidden lg:block\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Year\r\n          </div>\r\n          <Dropdown items={years} onSelected={setSelectedYear} />\r\n        </div>\r\n        <div className=\"Season hidden lg:block\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Season\r\n          </div>\r\n          <Dropdown items={seasons} onSelected={setSelectedSeason} />\r\n        </div>\r\n        <div className=\"Format hidden lg:block\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Format\r\n          </div>\r\n          <Dropdown\r\n            items={formats}\r\n            onSelected={setSelectedFormats}\r\n            isMultiSelect\r\n          />\r\n        </div>\r\n      </div>\r\n      {(selectedCategory.length > 0 ||\r\n        selectedFormats.length > 0 ||\r\n        selectedSeason.length > 0 ||\r\n        selectedYear.length > 0) && (\r\n        <div className=\"selected-filter my-5 flex\">\r\n          <svg\r\n            className=\"w-6 h-6 text-gray-400\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\r\n            ></path>\r\n          </svg>\r\n          <div className=\"w-full flex\">\r\n            {selectedCategory\r\n              .concat(\r\n                selectedYear.concat(selectedSeason.concat(selectedFormats))\r\n              )\r\n              .map((item, index) => {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className=\"mx-1 bg-blue-400 w-max px-2 rounded-lg text-white text-sm\"\r\n                  >\r\n                    {item}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          <div className=\"flex text-gray-500 items-center justify-between w-48\">\r\n            <div className=\"flex text-sm\">\r\n              <svg\r\n                className=\"w-5 h-5 mr-1\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4\"\r\n                ></path>\r\n              </svg>{\" \"}\r\n              Popularity\r\n            </div>\r\n            <div>|</div>\r\n            <svg\r\n              className=\"w-6 h-6\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\r\n              ></path>\r\n            </svg>\r\n            <svg\r\n              className=\"w-6 h-6\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Wrapper.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Home.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Dropdown.js",["135"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./scrollbar.css\";\r\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\r\n\r\nconst Dropdown = ({ items, onSelected, isMultiSelect }) => {\r\n  const wrapperRef = useRef(null);\r\n  const [openInput, setOpenInput] = useState(false);\r\n  const [expand, setExpand] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const itemPrep = items.filter((item) =>\r\n    item.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n  const itemList = itemPrep.map((item, index) => (\r\n    <li\r\n      key={index}\r\n      onClick={() => {\r\n        if (!selectedItems.includes(item)) {\r\n          setSearch(\"\");\r\n          return isMultiSelect\r\n            ? setSelectedItems([...selectedItems, item])\r\n            : setSelectedItems([item]);\r\n        }\r\n      }}\r\n      className=\"p-1 flex justify-between rounded-md hover:bg-gray-700 hover:text-blue-400 cursor-default font-semibold text-sm\"\r\n    >\r\n      <div className=\"label\">{item}</div>\r\n      {selectedItems.includes(item) ? (\r\n        <svg\r\n          className=\"w-5 h-5 text-blue-500\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          ></path>\r\n        </svg>\r\n      ) : null}\r\n    </li>\r\n  ));\r\n  const prefix =\r\n    openInput && selectedItems.length === 0 ? (\r\n      <input\r\n        autoFocus\r\n        type=\"text\"\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        className=\"w-full h-full px-0 text-sm border-none focus:border-none focus:outline-none bg-transparent font-semibold focus:ring-0\"\r\n      />\r\n    ) : (\r\n      <span className=\"w-full\">Any</span>\r\n    );\r\n\r\n  useClickOutside(() => {\r\n    setExpand(false);\r\n    setOpenInput(false);\r\n  }, wrapperRef);\r\n\r\n  useEffect(() => {\r\n    onSelected(selectedItems);\r\n  }, [selectedItems]);\r\n  const icon =\r\n    selectedItems.length === 0 ? (\r\n      <svg\r\n        className=\"w-6 h-6\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d={expand ? \"M5 15l7-7 7 7\" : \"M19 9l-7 7-7-7\"}\r\n        ></path>\r\n      </svg>\r\n    ) : (\r\n      <svg\r\n        className=\"w-6 h-6\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        onClick={() => setSelectedItems([])}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M6 18L18 6M6 6l12 12\"\r\n        ></path>\r\n      </svg>\r\n    );\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      onClick={() => setExpand(true)}\r\n      className=\"dropdown wrapper w-44\"\r\n    >\r\n      <div className=\"bg-gray-800 h-10 rounded-lg flex items-center py-2 px-3 text-sm text-gray-300 font-semibold justify-between\">\r\n        <div className=\"w-full h-full\" onClick={() => setOpenInput(true)}>\r\n          {selectedItems.length === 0 ? (\r\n            prefix\r\n          ) : (\r\n            <div className=\"prefix flex\">\r\n              <div className=\"bg-gray-700 text-xs py-1 px-2 w-max rounded-md mr-1\">\r\n                {selectedItems[0]}\r\n              </div>\r\n              {selectedItems.length > 1 ? (\r\n                <div className=\"bg-gray-700 text-xs py-1 px-2 w-max rounded-md\">\r\n                  + {selectedItems.length - 1}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {icon}\r\n      </div>\r\n      {expand && (\r\n        <div className=\"item-list min-h-0 max-h-96 w-44 bg-gray-800 mt-2 rounded-lg text-gray-500 p-3 absolute z-50\">\r\n          <ul>{itemList}</ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nDropdown.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nexport default Dropdown;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Input.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Dropdown2.js",["136"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./scrollbar.css\";\r\n\r\nconst Dropdown2 = ({ items, onSelected, name, className }) => {\r\n  const wrapperRef = useRef(null);\r\n  const [expand, setExpand] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(name);\r\n  const itemList = items.map((item, index) => (\r\n    <li\r\n      key={index}\r\n      onClick={() => setSelectedItem(item)}\r\n      className=\"py-2 px-4 hover:bg-gray-200 cursor-default font-semibold text-sm\"\r\n    >\r\n      <div className={`${selectedItem === item ? \"text-blue-500\" : null}`}>\r\n        {item}\r\n      </div>\r\n    </li>\r\n  ));\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setExpand(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    onSelected(selectedItem);\r\n  }, [selectedItem]);\r\n  const icon =\r\n    selectedItem === name ? (\r\n      <svg\r\n        className=\"w-4 h-4\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d={expand ? \"M5 15l7-7 7 7\" : \"M19 9l-7 7-7-7\"}\r\n        ></path>\r\n      </svg>\r\n    ) : (\r\n      <svg\r\n        className=\"w-4 h-4\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        onClick={() => setSelectedItem(name)}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M6 18L18 6M6 6l12 12\"\r\n        ></path>\r\n      </svg>\r\n    );\r\n  return (\r\n    <div ref={wrapperRef} className={`dropdown wrapper relative ${className}`}>\r\n      <div\r\n        onClick={() => setExpand(!expand)}\r\n        className=\"bg-gray-900 rounded-lg flex items-center h-full px-1 w-full text-gray-300 justify-between\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          value={!selectedItem ? name : selectedItem}\r\n          className=\"bg-transparent border-0 focus:border-0 focus:ring-0 text-white w-1/2\"\r\n        />\r\n        {icon}\r\n      </div>\r\n      {expand && (\r\n        <div className=\"item-list min-h-0 max-h-96 w-full bg-white mt-2 rounded text-gray-400 absolute z-50\">\r\n          <ul>{itemList}</ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nDropdown2.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nexport default Dropdown2;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/InputNumber.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Textarea.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/DatePicker.js",["137","138","139","140","141","142","143","144"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\nimport { useClickOutside } from \"../../hooks/useClickOutside\";\r\n\r\nconst DatePicker = ({ className }) => {\r\n  const [monthNames, setMonthNames] = useState([\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ]);\r\n  const [daysName, setDaysName] = useState([\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thu\",\r\n    \"Fri\",\r\n    \"Sat\",\r\n  ]);\r\n  const [showDatepicker, setShowDatepicker] = useState(false);\r\n  const [month, setMonth] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [noOfDays, setNoOfDays] = useState([]);\r\n  const [blankDays, setBlankDays] = useState([]);\r\n  const [datePickerValue, setDatePickerValue] = useState(\"\");\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const initDate = () => {\r\n    let today = new Date();\r\n    setMonth(today.getMonth());\r\n    setYear(today.getFullYear());\r\n  };\r\n  const isToday = (date) => {\r\n    const today = new Date();\r\n    const d = new Date(year, month, date);\r\n\r\n    return today.toDateString() === d.toDateString() ? true : false;\r\n  };\r\n\r\n  const getDateValue = (date) => {\r\n    let selectedDate = new Date(year, month, date);\r\n    setDatePickerValue(selectedDate.toDateString());\r\n\r\n    inputRef.current.value =\r\n      selectedDate.getFullYear() +\r\n      \"-\" +\r\n      (\"0\" + selectedDate.getMonth()).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + selectedDate.getDate()).slice(-2);\r\n\r\n    setShowDatepicker(false);\r\n  };\r\n\r\n  const getNoOfDays = () => {\r\n    let daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n    let dayOfWeek = new Date(year, month).getDay();\r\n    let blankdaysArray = [];\r\n    for (var i = 1; i <= dayOfWeek; i++) {\r\n      blankdaysArray.push(i);\r\n    }\r\n\r\n    let daysArray = [];\r\n    for (var i = 1; i <= daysInMonth; i++) {\r\n      daysArray.push(i);\r\n    }\r\n\r\n    setBlankDays(blankDays);\r\n    setNoOfDays(daysArray);\r\n\r\n    console.log(daysName);\r\n  };\r\n\r\n  const onEscape = (e) => {\r\n    if (e.keyCode === 27) {\r\n      setShowDatepicker(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initDate();\r\n    getNoOfDays();\r\n  }, []);\r\n\r\n  useClickOutside(() => {\r\n    setShowDatepicker(false);\r\n  }, wrapperRef);\r\n\r\n  const daysComp = daysName.map((day, index) => {\r\n    return (\r\n      <div style={{ width: \"14.26%\" }} className=\"px-1\" key={index}>\r\n        <div className=\"text-gray-800 font-medium text-center text-xs\">\r\n          {day}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`relative flex flex-col-reverse ${className}`}\r\n      ref={wrapperRef}\r\n    >\r\n      <div className=\"flex \" onClick={() => setShowDatepicker(!showDatepicker)}>\r\n        <input type=\"hidden\" name=\"date\" ref={inputRef} />\r\n        <input\r\n          type=\"text\"\r\n          readOnly\r\n          value={datePickerValue}\r\n          onChange={(e) => setDatePickerValue(e.target.value)}\r\n          onKeyDown={onEscape}\r\n          className=\"w-full pl-10 bg-gray-900 py-3 border-0 leading-none rounded-lg shadow-sm focus:outline-none focus:ring-0 text-white text-sm\"\r\n        />\r\n        <div className=\"absolute top-0 left-0 px-3 py-2\">\r\n          <svg\r\n            className=\"h-6 w-6 text-gray-400\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      <motion.div\r\n        className={`bg-white mb-14 w-full rounded shadow p-4 absolute ${\r\n          showDatepicker ? \"block\" : \"hidden\"\r\n        }`}\r\n        initial={{ scaleY: 0.5 }}\r\n        animate={{ scaleY: 1 }}\r\n      >\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <div>\r\n            <span className=\"text-lg font-bold text-gray-800\">\r\n              {monthNames[month]}\r\n            </span>\r\n            <span className=\"ml-1 text-lg text-gray-600 font-normal\">\r\n              {year}\r\n            </span>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className={`transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 p-1 rounded-full ${\r\n                month == 0 ? \"cursor-not-allowed opacity-25\" : null\r\n              }`}\r\n              disabled={month == 0 ? true : false}\r\n              onClick={(e) => {\r\n                e.preventDefault();\r\n                setMonth(month - 1);\r\n                return getNoOfDays();\r\n              }}\r\n            >\r\n              <svg\r\n                className=\"h-6 w-6 text-gray-500 inline-flex\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M15 19l-7-7 7-7\"\r\n                />\r\n              </svg>\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              className={`transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 p-1 rounded-full ${\r\n                month == 11 ? \"cursor-not-allowed opacity-25\" : null\r\n              }`}\r\n              disabled={month == 11 ? true : false}\r\n              onClick={() => {\r\n                setMonth(month + 1);\r\n                getNoOfDays();\r\n              }}\r\n            >\r\n              <svg\r\n                className=\"h-6 w-6 text-gray-500 inline-flex\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M9 5l7 7-7 7\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"flex flex-wrap mb-3 -mx-1\">{daysComp}</div>\r\n        <div className=\"flex flex-wrap -mx-1\">\r\n          {blankDays.map((blankDay, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                style={{ width: \"14.28%\" }}\r\n                className=\"text-center border p-1 border-transparent text-sm\"\r\n              ></div>\r\n            );\r\n          })}\r\n\r\n          {noOfDays.map((date, index) => {\r\n            return (\r\n              <div\r\n                style={{ width: \"14.28%\" }}\r\n                className=\"px-1 mb-1\"\r\n                key={index}\r\n              >\r\n                <div\r\n                  onClick={() => getDateValue(date)}\r\n                  className={`cursor-pointer p-1 text-center text-sm leading-none rounded-full transition ease-in-out duration-100 ${\r\n                    isToday(date) === true\r\n                      ? \"bg-blue-500 text-white\"\r\n                      : \"text-gray-700 hover:bg-blue-200\"\r\n                  } `}\r\n                >\r\n                  {\" \"}\r\n                  {date}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/ItemsWrapper.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemList.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemSekeleton.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemSummary.js",["145"],"import React, { useState, useContext } from \"react\";\r\nimport \"./index.css\";\r\nimport \"./tooltip.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport { ModalContext } from \"../../context/ModalContext\";\r\nimport moment from \"moment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst ItemSummary = ({ item, hoverItem }) => {\r\n  const [expand, setExpand] = useState(false);\r\n  const [more, setMore] = useState(false);\r\n  const { setIsOpen, setInfo } = useContext(ModalContext);\r\n  return (\r\n    <div\r\n      className=\"relative w-32 h-64 lg:w-40 lg:h-80\"\r\n      onMouseOver={() => setExpand(true)}\r\n      onMouseLeave={() => setExpand(false)}\r\n    >\r\n      <motion.div\r\n        className=\"item w-full h-full rounded text-gray-500 hover:text-blue-400\"\r\n        initial={{ opacity: 0.5 }}\r\n        animate={{ opacity: 1 }}\r\n        transition={{ duration: 0.2 }}\r\n      >\r\n        <div className=\"w-full h-48 lg:h-56 relative\">\r\n          <Link to={\"/anime/\" + item.id}>\r\n            <img\r\n              src={item.coverImage.extraLarge}\r\n              alt=\"image\"\r\n              className=\"w-full h-full rounded\"\r\n            />\r\n          </Link>\r\n          <div\r\n            className=\" rounded-full absolute bottom-3 right-2 text-gray-900 flex flex-col-reverse\"\r\n            onMouseLeave={() => setMore(false)}\r\n          >\r\n            {expand && (\r\n              <motion.div\r\n                className=\"expand\"\r\n                initial={{ scale: 0 }}\r\n                animate={{ scale: 1 }}\r\n                transition={{ duration: 0.2 }}\r\n                whileHover={{ scale: 1.1 }}\r\n                onClick={() => {\r\n                  document.body.classList.add(\"overflow-hidden\");\r\n                  setInfo({\r\n                    title: item.title.userPreferred,\r\n                    coverImage: item.coverImage.large,\r\n                    bannerImage: item.bannerImage,\r\n                  });\r\n                  return setIsOpen(true);\r\n                }}\r\n              >\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                  onMouseOver={() => setMore(true)}\r\n                  className=\"w-7 h-7 tooltip\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm1-11a1 1 0 10-2 0v2H7a1 1 0 100 2h2v2a1 1 0 102 0v-2h2a1 1 0 100-2h-2V7z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n              </motion.div>\r\n            )}\r\n            {more && (\r\n              <div className=\"more mb-1 flex flex-col\">\r\n                <div className=\"tooltip\">\r\n                  <div className=\"tooltiptext\">Set To Watching</div>\r\n                  <motion.svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"currentColor\"\r\n                    className=\"w-7 h-7\"\r\n                    initial={{ scale: 0, y: 12 }}\r\n                    animate={{ scale: 1, y: 0 }}\r\n                    transition={{ type: \"tween\", duration: 0.2 }}\r\n                    whileHover={{ scale: 1.1 }}\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z\"\r\n                      clipRule=\"evenodd\"\r\n                    />\r\n                  </motion.svg>\r\n                </div>\r\n                {item.status === \"FINISHED\" && (\r\n                  <div className=\"tooltip\">\r\n                    <div className=\"tooltiptext\">Set To Completed</div>\r\n                    <motion.svg\r\n                      xmlns=\"http://www.w3.org/2000/svg\"\r\n                      viewBox=\"0 0 20 20\"\r\n                      fill=\"currentColor\"\r\n                      className=\"w-7 h-7\"\r\n                      initial={{ scale: 0, y: 12 }}\r\n                      animate={{ scale: 1, y: 0 }}\r\n                      transition={{ type: \"tween\", duration: 0.2 }}\r\n                      whileHover={{ scale: 1.1 }}\r\n                    >\r\n                      <path\r\n                        fillRule=\"evenodd\"\r\n                        d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\"\r\n                        clipRule=\"evenodd\"\r\n                      />\r\n                    </motion.svg>\r\n                  </div>\r\n                )}\r\n                <div className=\"tooltip\">\r\n                  <div className=\"tooltiptext\">Set To Planning</div>\r\n                  <motion.svg\r\n                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                    viewBox=\"0 0 20 20\"\r\n                    fill=\"currentColor\"\r\n                    className=\"w-7 h-7\"\r\n                    initial={{ scale: 0, y: 12 }}\r\n                    animate={{ scale: 1, y: 0 }}\r\n                    transition={{ type: \"tween\", duration: 0.2 }}\r\n                    whileHover={{ scale: 1.1 }}\r\n                  >\r\n                    <path\r\n                      fillRule=\"evenodd\"\r\n                      d=\"M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z\"\r\n                      clipRule=\"evenodd\"\r\n                    />\r\n                  </motion.svg>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n        <div className=\"title h-12 py-2 overflow-hidden text-sm font-medium \">\r\n          <Link to={\"/anime/\" + item.id}>{item.title.userPreferred}</Link>\r\n        </div>\r\n      </motion.div>\r\n      {expand && (\r\n        <motion.div\r\n          initial={{ scale: 0.8 }}\r\n          animate={{ scale: 1 }}\r\n          className={`hidden lg:block h-40 w-72 p-5 rounded-lg bg-gray-800 absolute z-40 top-5 text-xs font-semibold ${hoverItem}`}\r\n        >\r\n          <div className=\"flex justify-between\">\r\n            <div className=\"title text-gray-300 text-base mb-3\">\r\n              {`${\r\n                item.airingSchedule.nodes.length > 0\r\n                  ? `Ep. ${item.airingSchedule.nodes[0].episode}`\r\n                  : `${item.season} ${item.seasonYear}`\r\n              } ${\r\n                item.airingSchedule.nodes.length > 0\r\n                  ? `airing ${moment\r\n                      .unix(item.airingSchedule.nodes[0].airingAt)\r\n                      .fromNow()}`\r\n                  : \"\"\r\n              }`}\r\n            </div>\r\n            <div className=\"score\">{item.averageScore}</div>\r\n          </div>\r\n          <div className=\"studio text-blue-400 mb-1\">\r\n            {item.studios.nodes[0].name}\r\n          </div>\r\n          <div className=\"info text-gray-500 mb-5\">{`${item.format} ${\r\n            item.episodes != null ? \" • \" + item.episodes + \" Episode\" : \"\"\r\n          }`}</div>\r\n          <div className=\"category flex\">\r\n            {item.genres.slice(0, 3).map((genre, index) => (\r\n              <div\r\n                className=\"bg-blue-500 text-blue-100 px-2 rounded-lg mr-1\"\r\n                key={index}\r\n              >\r\n                {genre}\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ItemSummary;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/hooks/useClickOutside.js",["146"],"import { useEffect } from \"react\";\n\nexport const useClickOutside = (func, ref) => {\n  useEffect(() => {\n    document.addEventListener(\"click\", handleClickOutside, false);\n    return () => {\n      document.removeEventListener(\"click\", handleClickOutside, false);\n    };\n  }, []);\n\n  const handleClickOutside = (event) => {\n    if (ref.current && !ref.current.contains(event.target)) {\n      func();\n    }\n  };\n};\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Detail.js",["147","148","149","150"],"import React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport moment from \"moment\";\nimport Overview from \"../components/details/Overview\";\nimport {\n  NavLink,\n  Route,\n  BrowserRouter,\n  Switch,\n  useRouteMatch,\n  Link,\n} from \"react-router-dom\";\nimport Watch from \"../components/details/Watch\";\nimport Character from \"../components/details/Character\";\nimport Staff from \"../components/details/Staff\";\n\nconst Detail = ({ match }) => {\n  const MEDIA = gql`\n    query($id: Int) {\n      Media(id: $id) {\n        id\n        title {\n          romaji\n          english\n          native\n          userPreferred\n        }\n        description\n        coverImage {\n          extraLarge\n        }\n        bannerImage\n        rankings {\n          id\n          rank\n          context\n        }\n        airingSchedule(notYetAired: true, page: 1, perPage: 1) {\n          nodes {\n            id\n            episode\n            airingAt\n          }\n        }\n        format\n        episodes\n        duration\n        status\n        startDate {\n          year\n          month\n          day\n        }\n        averageScore\n        meanScore\n        popularity\n        favourites\n        studios {\n          nodes {\n            id\n            name\n            isAnimationStudio\n          }\n        }\n        source\n        hashtag\n        genres\n        synonyms\n        season\n        seasonYear\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(MEDIA, {\n    variables: {\n      id: match.params.id,\n    },\n  });\n\n  let { path, url } = useRouteMatch();\n  const [navigation, setNavigation] = useState([\n    {\n      label: \"Overview\",\n      to: \"/anime/\" + match.params.id,\n    },\n    {\n      label: \"Watch\",\n      to: `${url}/watch`,\n    },\n    {\n      label: \"Characters\",\n      to: `${url}/characters`,\n    },\n    {\n      label: \"Staff\",\n      to: `${url}/staff`,\n    },\n    {\n      label: \"Stats\",\n      to: \"/\",\n    },\n    {\n      label: \"Social\",\n      to: \"/\",\n    },\n  ]);\n\n  if (error) return <p>{error.message} :(</p>;\n  if (loading) return <div className=\"item-wrapper\">LOADING...</div>;\n\n  const producers = data.Media.studios.nodes.filter(\n    (studio) => !studio.isAnimationStudio\n  );\n  return (\n    <div className=\"detail\">\n      <div\n        className=\"banner-image w-full h-52 lg:h-72 flex flex-col justify-end\"\n        style={{\n          background: `url(${data.Media.bannerImage})`,\n          boxShadow: \"none\",\n        }}\n      >\n        <div className=\"shadow  w-full h-1/3 bg-gradient-to-t from-gray-900 opacity-90 to-transparent\"></div>\n      </div>\n\n      <div className=\"bg-gray-800 px-5 h-max lg:px-40\">\n        <div className=\"header h-min block lg:flex\">\n          <div className=\"overflow-visible relative flex justify-between lg:justify-start lg:flex-col\">\n            <img\n              className=\"h-40 w-28 lg:h-80 lg:w-60 -mt-24 lg:-mt-60 lg:mb-5 lg:h object-cover\"\n              src={data.Media.coverImage.extraLarge}\n              alt=\"Cover Image\"\n            />\n            <div className=\"flex w-max lg:w-60\">\n              <button className=\"rounded bg-blue-400 text-blue-50 py-1 mr-4 px-16 lg:px-0 lg:w-full h-10 self-end lg:self-start\">\n                Add To List\n              </button>\n              <button className=\"rounded bg-red-500 text-blue-50 py-1 px-3 h-10 self-end lg:self-start\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  viewBox=\"0 0 20 20\"\n                  fill=\"currentColor\"\n                  className=\"w-5 h-5\"\n                >\n                  <path\n                    fillRule=\"evenodd\"\n                    d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\n                    clipRule=\"evenodd\"\n                  />\n                </svg>\n              </button>\n            </div>\n          </div>\n          <div className=\"det\">\n            <div className=\"media-title font-semibold text-gray-200 py-5 lg:px-5\">\n              {data.Media.title.userPreferred}\n            </div>\n            <div\n              className=\"desctription px-5 pb-5 hidden lg:block text-sm text-gray-500 hover:text-gray-400\"\n              dangerouslySetInnerHTML={{ __html: data.Media.description }}\n            ></div>\n          </div>\n        </div>\n        <div className=\"content pb-5 text-gray-300\">\n          <div className=\"navigation w-min mt-5 mx-auto text-xs font-semibold\">\n            {navigation.map((item) => (\n              <Link to={item.to} className=\"px-3 hover:text-blue-400\">\n                {item.label}\n              </Link>\n            ))}\n          </div>\n        </div>\n      </div>\n\n      <div className=\"content bg-gray-900 p-5 block lg:flex justify-between lg:px-40\">\n        <div className=\"info lg:w-1/5\">\n          <div className=\"bg-gray-800 p-3 flex lg:block overflow-x-auto lg:overflow-hidden lg:whitespace-normal text-xs whitespace-nowrap mb-5\">\n            {data.Media.airingSchedule.nodes.length > 0 ? (\n              <div className=\"info-item mr-5 lg:mb-3\">\n                <div className=\"label text-gray-300\">Airing</div>\n                <div className=\"item text-blue-500 text-sm\">\n                  {`Ep. ${\n                    data.Media.airingSchedule.nodes[0]?.episode\n                  } ${moment\n                    .unix(data.Media.airingSchedule.nodes[0]?.airingAt)\n                    .fromNow()}`}\n                </div>\n              </div>\n            ) : null}\n\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Format</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.format}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Episodes</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.episodes}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Episode Duration</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {`${data.Media.duration} mins`}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Episode Duration</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {`${data.Media.duration} mins`}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Status</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.status}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Start Date</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {moment(\n                  `${data.Media.startDate.year}${data.Media.startDate.month}${data.Media.startDate.day}`,\n                  \"YYYYMMDD\"\n                )\n                  .format(\"LL\")\n                  .toString()}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Season</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {`${data.Media.season} ${data.Media.seasonYear}`}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Average Score</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {`${data.Media.averageScore}%`}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Popularity</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.popularity}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Favourites</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.favourites}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Studios</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {\n                  data.Media.studios.nodes.find(\n                    (studio) => studio.isAnimationStudio\n                  ).name\n                }\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Producers</div>\n              <div className=\"item text-gray-200 text-sm flex lg:block\">\n                {producers.map((stud, idx) => (\n                  <div className=\"mr-1\">\n                    {stud.name + (idx === producers.length - 1 ? \"\" : \",\")}\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Hashtag</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.hashtag}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Genres</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.genres.join(\", \")}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Romaji</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.title.romaji}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">English</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.title.english}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3\">\n              <div className=\"label text-gray-300\">Native</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.title.native}\n              </div>\n            </div>\n            <div className=\"info-item mr-5 lg:mb-3 pr-5\">\n              <div className=\"label text-gray-300\">Synonyms</div>\n              <div className=\"item text-gray-200 text-sm\">\n                {data.Media.synonyms.join(\", \")}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"w-full lg:w-3/4\">\n          <Switch>\n            <Route exact path=\"/anime/:id\">\n              <Overview id={match.params.id} />\n            </Route>\n            <Route path={`/anime/:id/watch`}>\n              <Watch id={match.params.id} />\n            </Route>\n            <Route path={`${url}/characters`}>\n              <Character id={match.params.id} />\n            </Route>\n            <Route path={`${url}/staff`}>\n              <Staff id={match.params.id} />\n            </Route>\n          </Switch>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Detail;\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/Overview.js",["151","152","153","154","155","156"],"import React, { useState } from \"react\";\nimport { gql, useQuery } from \"@apollo/client\";\nimport ReactTooltip from \"react-tooltip\";\nimport CharacterLists from \"./CharacterLists\";\nimport StaffLists from \"./StaffLists\";\n\nconst Overview = ({ id }) => {\n  const [colors, setColors] = useState([\"green\", \"blue\", \"purple\", \"pink\"]);\n  const [hover, setHover] = useState(false);\n  const OVERVIEW = gql`\n    query($id: Int) {\n      Media(id: $id) {\n        description\n        relations {\n          edges {\n            id\n            relationType\n            node {\n              id\n              title {\n                userPreferred\n              }\n              format\n              status\n              coverImage {\n                extraLarge\n              }\n            }\n          }\n        }\n        characters(perPage: 6, page: 1, sort: ROLE) {\n          edges {\n            role\n            voiceActors {\n              id\n              name {\n                full\n              }\n              language\n              image {\n                large\n              }\n            }\n            node {\n              id\n              name {\n                full\n              }\n              image {\n                large\n              }\n            }\n          }\n        }\n        staff(page: 1, perPage: 4) {\n          edges {\n            id\n            role\n            node {\n              id\n              name {\n                full\n              }\n              image {\n                large\n              }\n            }\n          }\n        }\n        stats {\n          scoreDistribution {\n            score\n            amount\n          }\n          statusDistribution {\n            status\n            amount\n          }\n        }\n        streamingEpisodes {\n          title\n          thumbnail\n          url\n          site\n        }\n        trailer {\n          id\n          site\n          thumbnail\n        }\n        recommendations(page: 1, perPage: 5) {\n          pageInfo {\n            total\n            perPage\n            currentPage\n            lastPage\n            hasNextPage\n          }\n          nodes {\n            mediaRecommendation {\n              id\n              title {\n                userPreferred\n              }\n              coverImage {\n                extraLarge\n              }\n            }\n          }\n        }\n        reviews(page: 1, perPage: 2, sort: RATING_DESC) {\n          nodes {\n            summary\n            user {\n              avatar {\n                large\n              }\n            }\n            rating\n          }\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(OVERVIEW, {\n    variables: {\n      id,\n    },\n  });\n\n  if (error) return <p>{error.message} :(</p>;\n  if (loading) return <div className=\"item-wrapper\">LOADING...</div>;\n  const media = data.Media;\n  const total = media.stats.statusDistribution\n    .filter((stat) => stat.status !== \"DROPPED\")\n    .reduce(function (cnt, o) {\n      return cnt + o.amount;\n    }, 0);\n  const largestScore = Math.max(\n    ...Array.from(media.stats.scoreDistribution, (x) => x.amount)\n  );\n\n  return (\n    <div className=\"overview w-full\">\n      <div className=\"description py-5 block lg:hidden\">\n        <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n          Description\n        </div>\n        <div className=\"bg-gray-800 p-5 text-gray-400 text-sm\">\n          <div dangerouslySetInnerHTML={{ __html: media.description }} />\n        </div>\n      </div>\n      <div className=\"relations\">\n        <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n          Relations\n        </div>\n        <div className=\"flex lg:grid grid-cols-2 gap-2 w-full pb-2 overflow-x-scroll whitespace-nowrap\">\n          {media.relations.edges.map((rel, index) => (\n            <div className=\"h-32 bg-gray-800 mr-3 lg:mr-0 flex\" key={index}>\n              <img\n                src={rel.node.coverImage.extraLarge}\n                className=\"w-24 h-full\"\n              />\n              <div className=\"info w-72 h-full text-sm p-3 font-medium flex flex-col justify-between\">\n                <div>\n                  <div className=\"type text-blue-500 font-semibold mb-1\">\n                    {rel.relationType}\n                  </div>\n                  <div className=\"media-title text-gray-400 hover:text-blue-500 whitespace-pre-wrap\">\n                    {rel.node.title.userPreferred}\n                  </div>\n                </div>\n                <div className=\"info text-gray-400 text-xs\">{`${rel.node.format} · ${rel.node.status}`}</div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"characters py-5\">\n        <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n          Characters\n        </div>\n\n        <CharacterLists characters={media.characters} />\n      </div>\n\n      <div className=\"staff py-5\">\n        <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n          Staff\n        </div>\n        <StaffLists staffs={media.staff} />\n      </div>\n\n      <div className=\"stats\">\n        <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n          Status Distribution\n        </div>\n        <div className=\"bg-gray-800 rounded overflow-hidden\">\n          <div className=\"p-5 flex justify-between\">\n            {media.stats.statusDistribution\n              .filter((stat) => stat.status !== \"DROPPED\")\n              .map((stat, index) => (\n                <div className=\"stat\" key={index}>\n                  <div\n                    className={`bg-${colors[index]}-400 text-${colors[index]}-50 w-min px-3 py-1 rounded-md text-sm`}\n                    data-tip\n                    data-for=\"registerTip\"\n                  >\n                    {stat.status}\n                  </div>\n                  <div className={`text-${colors[index]}-400 text-center mt-2`}>\n                    {stat.amount}{\" \"}\n                    <span className=\"text-sm text-gray-400\">Users</span>\n                  </div>\n                </div>\n              ))}\n          </div>\n          <div className=\"chart flex\">\n            {media.stats.statusDistribution\n              .filter((stat) => stat.status !== \"DROPPED\")\n              .map((stat, index) => {\n                if (index >= 2) {\n                  return (\n                    <div\n                      className={`bg-${colors[index]}-400 h-3 tooltip-o`}\n                      style={{ width: `${(stat.amount / total) * 100}%` }}\n                    >\n                      <span className=\"tooltip-text text-xs bg-gray-700 rounded text-gray-200 -mt-7 right-9\">\n                        {stat.status}\n                      </span>\n                    </div>\n                  );\n                } else {\n                  return (\n                    <div\n                      className={`bg-${colors[index]}-400 h-3 tooltip-o`}\n                      style={{ width: `${(stat.amount / total) * 100}%` }}\n                    >\n                      <span className=\"tooltip-text text-xs bg-gray-700 rounded text-gray-200 -mt-7\">\n                        {stat.status}\n                      </span>\n                    </div>\n                  );\n                }\n              })}\n            <ReactTooltip id=\"stat\" place=\"top\" type=\"dark\" effect=\"float\" />\n          </div>\n        </div>\n      </div>\n\n      <div className=\"stats py-5\">\n        <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n          Score Distribution\n        </div>\n        <div className=\"w-full h-36 rounded bg-gray-800 flex items-end p-5 justify-between\">\n          {media.stats.scoreDistribution.map((score) => (\n            <div\n              className=\"w-5 bg-green-400 rounded-full\"\n              style={{\n                height: `${\n                  (score.amount / largestScore) * 100 + 20 > 100\n                    ? 100\n                    : (score.amount / largestScore) * 100 + 20\n                }%`,\n              }}\n            ></div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"watch py-5\">\n        <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n          Watch\n        </div>\n        <div className=\"flex w-full\">\n          {media.streamingEpisodes.slice(0, 1).map((episode, index) => {\n            return (\n              <div\n                className=\"m-2 w-1/2 h-28 banner-image flex items-end rounded overflow-hidden\"\n                style={{\n                  background: `url(${episode.thumbnail})`,\n                  boxShadow: \"none\",\n                }}\n              >\n                <div\n                  className=\"eps-title bg-gray-700 bg-opacity-30 text-gray-100 text-xs truncate p-1 w-full\"\n                  title={episode.title}\n                >\n                  {episode.title}\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {media.trailer ? (\n        <div className=\"watch py-5\">\n          <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n            Trailer\n          </div>\n          <iframe\n            className=\"w-full h-60 rounded\"\n            src={`https://${media.trailer.site}.com/embed/${media.trailer.id}`}\n            frameborder=\"0\"\n            allowFullScreen\n          ></iframe>\n        </div>\n      ) : null}\n\n      <div className=\"watch py-5\">\n        <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n          Recommendations\n        </div>\n\n        <div className=\"flex overflow-x-scroll\">\n          {media.recommendations.nodes.map((rec) => (\n            <div className=\"w-32 mr-3 flex-shrink-0 h-52\">\n              <img\n                src={rec.mediaRecommendation.coverImage.extraLarge}\n                alt=\"mediaimage\"\n                className=\"w-full h-40\"\n              />\n\n              <a\n                href=\"#\"\n                className=\"title mt-1 text-sm text-gray-400 font font-semibold hover:text-blue-500\"\n              >\n                {rec.mediaRecommendation.title.userPreferred}\n              </a>\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"watch py-5\">\n        <div className=\"label text-gray-400 text-sm font-semibold pb-3\">\n          Reviews\n        </div>\n\n        {media.reviews.nodes.map((review) => (\n          <div className=\"w-full min-h-0 flex justify-between mb-3\">\n            <img\n              src={review.user.avatar.large}\n              alt=\"useravatar\"\n              className=\"h-14 w-14\"\n            />\n            <div className=\"bg-gray-800 w-5/6 p-3 text-sm text-gray-400 text-center rounded\">\n              {review.summary}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Overview;\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/Watch.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/Character.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/CharacterLists.js",["157","158"],"import React from \"react\";\n\nconst CharacterLists = ({ characters }) => {\n  return (\n    <div className=\"grid lg:grid-cols-2 gap-2\">\n      {characters.edges.map((char) => (\n        <div className=\"bg-gray-800 w-full h-24 mb-3 lg:mb-0 flex justify-between text-sm text-gray-400\">\n          <div className=\"char flex\">\n            <img src={char.node.image.large} className=\"w-16 h-full\" />\n            <div className=\"flex flex-col p-3 justify-between\">\n              <div className=\"name\">{char.node.name.full}</div>\n              <div className=\"role text-xs\">{char.role}</div>\n            </div>\n          </div>\n          <div className=\"flex flex-row-reverse\">\n            <img\n              src={char.voiceActors[0]?.image.large}\n              className=\"w-16 h-full\"\n            />\n            <div className=\"flex flex-col p-3 justify-between text-right\">\n              <div className=\"name\">{char.voiceActors[0]?.name.full}</div>\n              <div className=\"role text-xs\">\n                {char.voiceActors[0]?.language}\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default CharacterLists;\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/StaffLists.js",["159"],"import React from \"react\";\n\nconst StaffLists = ({ staffs }) => {\n  return (\n    <div className=\"grid grid-cols-2 gap-3\">\n      {staffs.edges.map((staff) => (\n        <div className=\"bg-gray-800 w-full h-24 flex justify-between text-sm text-gray-400\">\n          <div className=\"char flex\">\n            <img src={staff.node.image.large} className=\"w-16 h-full\" />\n            <div className=\"flex flex-col p-3 justify-between\">\n              <div className=\"name\">{staff.node.name.full}</div>\n              <div className=\"role text-xs\">{staff.role}</div>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default StaffLists;\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/details/Staff.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":1,"column":37,"nodeType":"166","messageId":"167","endLine":1,"endColumn":46},{"ruleId":"164","severity":1,"message":"168","line":12,"column":11,"nodeType":"166","messageId":"167","endLine":12,"endColumn":17},{"ruleId":"164","severity":1,"message":"169","line":13,"column":18,"nodeType":"166","messageId":"167","endLine":13,"endColumn":27},{"ruleId":"164","severity":1,"message":"170","line":21,"column":10,"nodeType":"166","messageId":"167","endLine":21,"endColumn":24},{"ruleId":"171","severity":1,"message":"172","line":63,"column":13,"nodeType":"173","endLine":66,"endColumn":15},{"ruleId":"164","severity":1,"message":"174","line":4,"column":17,"nodeType":"166","messageId":"167","endLine":4,"endColumn":25},{"ruleId":"164","severity":1,"message":"175","line":6,"column":17,"nodeType":"166","messageId":"167","endLine":6,"endColumn":25},{"ruleId":"164","severity":1,"message":"176","line":52,"column":17,"nodeType":"166","messageId":"167","endLine":52,"endColumn":24},{"ruleId":"164","severity":1,"message":"177","line":60,"column":19,"nodeType":"166","messageId":"167","endLine":60,"endColumn":29},{"ruleId":"164","severity":1,"message":"178","line":67,"column":19,"nodeType":"166","messageId":"167","endLine":67,"endColumn":29},{"ruleId":"179","severity":1,"message":"180","line":65,"column":6,"nodeType":"181","endLine":65,"endColumn":21,"suggestions":"182"},{"ruleId":"179","severity":1,"message":"180","line":33,"column":6,"nodeType":"181","endLine":33,"endColumn":20,"suggestions":"183"},{"ruleId":"164","severity":1,"message":"184","line":6,"column":22,"nodeType":"166","messageId":"167","endLine":6,"endColumn":35},{"ruleId":"164","severity":1,"message":"185","line":20,"column":20,"nodeType":"166","messageId":"167","endLine":20,"endColumn":31},{"ruleId":"186","severity":1,"message":"187","line":76,"column":14,"nodeType":"166","messageId":"188","endLine":76,"endColumn":15},{"ruleId":"179","severity":1,"message":"189","line":95,"column":6,"nodeType":"181","endLine":95,"endColumn":8,"suggestions":"190"},{"ruleId":"191","severity":1,"message":"192","line":162,"column":23,"nodeType":"193","messageId":"194","endLine":162,"endColumn":25},{"ruleId":"191","severity":1,"message":"192","line":164,"column":31,"nodeType":"193","messageId":"194","endLine":164,"endColumn":33},{"ruleId":"191","severity":1,"message":"192","line":188,"column":23,"nodeType":"193","messageId":"194","endLine":188,"endColumn":25},{"ruleId":"191","severity":1,"message":"192","line":190,"column":31,"nodeType":"193","messageId":"194","endLine":190,"endColumn":33},{"ruleId":"195","severity":1,"message":"196","line":27,"column":13,"nodeType":"173","endLine":31,"endColumn":15},{"ruleId":"179","severity":1,"message":"197","line":9,"column":6,"nodeType":"181","endLine":9,"endColumn":8,"suggestions":"198"},{"ruleId":"164","severity":1,"message":"199","line":6,"column":3,"nodeType":"166","messageId":"167","endLine":6,"endColumn":10},{"ruleId":"164","severity":1,"message":"200","line":8,"column":3,"nodeType":"166","messageId":"167","endLine":8,"endColumn":16},{"ruleId":"164","severity":1,"message":"201","line":81,"column":22,"nodeType":"166","messageId":"167","endLine":81,"endColumn":35},{"ruleId":"195","severity":1,"message":"196","line":129,"column":13,"nodeType":"173","endLine":133,"endColumn":15},{"ruleId":"164","severity":1,"message":"202","line":8,"column":18,"nodeType":"166","messageId":"167","endLine":8,"endColumn":27},{"ruleId":"164","severity":1,"message":"203","line":9,"column":10,"nodeType":"166","messageId":"167","endLine":9,"endColumn":15},{"ruleId":"164","severity":1,"message":"204","line":9,"column":17,"nodeType":"166","messageId":"167","endLine":9,"endColumn":25},{"ruleId":"171","severity":1,"message":"172","line":160,"column":15,"nodeType":"173","endLine":163,"endColumn":17},{"ruleId":"205","severity":1,"message":"206","line":303,"column":11,"nodeType":"173","endLine":308,"endColumn":12},{"ruleId":"207","severity":1,"message":"208","line":326,"column":15,"nodeType":"173","endLine":329,"endColumn":16},{"ruleId":"171","severity":1,"message":"172","line":9,"column":13,"nodeType":"173","endLine":9,"endColumn":72},{"ruleId":"171","severity":1,"message":"172","line":16,"column":13,"nodeType":"173","endLine":19,"endColumn":15},{"ruleId":"171","severity":1,"message":"172","line":9,"column":13,"nodeType":"173","endLine":9,"endColumn":73},"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'isOpen' is assigned a value but never used.","'setStatus' is assigned a value but never used.","'selectedStatus' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setMenus' is assigned a value but never used.","'setItems' is assigned a value but never used.","'setYear' is assigned a value but never used.","'setSeasons' is assigned a value but never used.","'setFormats' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'onSelected'. Either include it or remove the dependency array. If 'onSelected' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["211"],["212"],"'setMonthNames' is assigned a value but never used.","'setDaysName' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'getNoOfDays'. Either include it or remove the dependency array.",["213"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.",["214"],"'NavLink' is defined but never used.","'BrowserRouter' is defined but never used.","'setNavigation' is assigned a value but never used.","'setColors' is assigned a value but never used.","'hover' is assigned a value but never used.","'setHover' is assigned a value but never used.","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","no-global-assign","no-unsafe-negation",{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},"Update the dependencies array to be: [onSelected, selectedItems]",{"range":"223","text":"224"},"Update the dependencies array to be: [onSelected, selectedItem]",{"range":"225","text":"226"},"Update the dependencies array to be: [getNoOfDays]",{"range":"227","text":"228"},"Update the dependencies array to be: [handleClickOutside]",{"range":"229","text":"230"},[2107,2122],"[onSelected, selectedItems]",[1054,1068],"[onSelected, selectedItem]",[2302,2304],"[getNoOfDays]",[274,276],"[handleClickOutside]"]