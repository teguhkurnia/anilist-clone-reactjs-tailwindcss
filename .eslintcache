[{"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/index.js":"1","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/App.js":"2","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/context/ModalContext.js":"3","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Footer.js":"4","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Modal.js":"5","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Navbar.js":"6","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Filter.js":"7","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Wrapper.js":"8","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Home.js":"9","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Dropdown.js":"10","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Input.js":"11","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Dropdown2.js":"12","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/InputNumber.js":"13","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Textarea.js":"14","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/DatePicker.js":"15","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/ItemsWrapper.js":"16","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemList.js":"17","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemSekeleton.js":"18","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemSummary.js":"19"},{"size":465,"mtime":1608263355341,"results":"20","hashOfConfig":"21"},{"size":410,"mtime":1609205568058,"results":"22","hashOfConfig":"21"},{"size":499,"mtime":1608512752509,"results":"23","hashOfConfig":"21"},{"size":907,"mtime":1608197824445,"results":"24","hashOfConfig":"21"},{"size":5704,"mtime":1609205816859,"results":"25","hashOfConfig":"21"},{"size":2092,"mtime":1608547226296,"results":"26","hashOfConfig":"21"},{"size":6255,"mtime":1609205814495,"results":"27","hashOfConfig":"21"},{"size":566,"mtime":1609205578794,"results":"28","hashOfConfig":"21"},{"size":685,"mtime":1609205991424,"results":"29","hashOfConfig":"21"},{"size":4399,"mtime":1609205796410,"results":"30","hashOfConfig":"21"},{"size":348,"mtime":1609205800225,"results":"31","hashOfConfig":"21"},{"size":2714,"mtime":1609205797778,"results":"32","hashOfConfig":"21"},{"size":1559,"mtime":1609205799405,"results":"33","hashOfConfig":"21"},{"size":456,"mtime":1609205800918,"results":"34","hashOfConfig":"21"},{"size":8121,"mtime":1609205798413,"results":"35","hashOfConfig":"21"},{"size":1929,"mtime":1609205982896,"results":"36","hashOfConfig":"21"},{"size":489,"mtime":1609206921599,"results":"37","hashOfConfig":"21"},{"size":478,"mtime":1609205884330,"results":"38","hashOfConfig":"21"},{"size":7309,"mtime":1609207089527,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"5pkbt5",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/index.js",[],["85","86"],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/App.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/context/ModalContext.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Footer.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Modal.js",["87","88","89","90","91","92"],"import React, { useContext, useRef, useEffect, useState } from \"react\";\r\nimport { ModalContext } from \"../../context/ModalContext\";\r\nimport Dropdown2 from \"../input/Dropdown2\";\r\nimport \"./modal.css\";\r\nimport { motion } from \"framer-motion\";\r\nimport DatePicker from \"../input/DatePicker\";\r\nimport Input from \"../input/Input\";\r\nimport InputNumber from \"../input/InputNumber\";\r\nimport Textarea from \"../input/Textarea\";\r\n\r\nconst Modal = () => {\r\n  const { isOpen, setIsOpen, info } = useContext(ModalContext);\r\n  const wrapperRef = useRef(null);\r\n  const handleClickOutside = (event) => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      document.body.classList.remove(\"overflow-hidden\");\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const [status, setStatus] = useState([\r\n    \"Watching\",\r\n    \"Plan to watch\",\r\n    \"Completed\",\r\n    \"Rewatching\",\r\n    \"Paused\",\r\n    \"Dropped\",\r\n  ]);\r\n\r\n  const [selectedStatus, setSelectedStatus] = useState(\"\");\r\n\r\n  return (\r\n    <motion.div\r\n      class=\"bg-gray-900 bg-opacity-70 flex flex-col justify-center items-center py-10 sm:py-12 fixed z-20 top-0 bottom-0 right-0 left-0 overflow-y-auto-auto overflow-x-hidden\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      transition={{ duration: 0.2 }}\r\n    >\r\n      <div\r\n        // ref={wrapperRef}\r\n        className=\"w-screen md:w-full lg:w-2/3 h-auto bg-gray-800 rounded mx-auto mt-72 lg:mt-0\"\r\n      >\r\n        <div\r\n          className=\"header h-48 w-full banner-image relative\"\r\n          style={{ background: `url(${info.bannerImage})` }}\r\n        >\r\n          <div\r\n            className=\"close w-5 h-5 absolute right-3 top-3\"\r\n            onClick={() => {\r\n              document.body.classList.remove(\"overflow-hidden\");\r\n              return setIsOpen(false);\r\n            }}\r\n          >\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              viewBox=\"0 0 20 20\"\r\n              fill=\"white\"\r\n            >\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            </svg>\r\n          </div>\r\n          <div className=\"content flex items-end h-full\">\r\n            <img\r\n              src={info.coverImage}\r\n              className=\"w-28 h-40 relative top-9 left-6\"\r\n            />\r\n            <div className=\"info flex justify-between w-full ml-5\">\r\n              <div className=\"py-3 px-6 text-white font-medium w-60 h-auto\">\r\n                {info.title}\r\n              </div>\r\n              <div className=\"flex text-white justify-between items-center w-32 py-5 pr-5\">\r\n                <svg\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                  viewBox=\"0 0 20 20\"\r\n                  fill=\"currentColor\"\r\n                  className=\"h-7 w-7\"\r\n                >\r\n                  <path\r\n                    fillRule=\"evenodd\"\r\n                    d=\"M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z\"\r\n                    clipRule=\"evenodd\"\r\n                  />\r\n                </svg>\r\n                <button className=\"py-1 bg-blue-500 rounded px-3 focus:outline-none\">\r\n                  Save\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"px-10 py-14 w-full lg:w-4/5\">\r\n          <div className=\"row block lg:flex justify-between \">\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">Status</div>\r\n              <Dropdown2\r\n                items={status}\r\n                onSelected={setSelectedStatus}\r\n                name=\"Status\"\r\n                className=\"lg:w-52\"\r\n              />\r\n            </div>\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">Score</div>\r\n              <InputNumber step={0.5} max=\"10\" min=\"0\" className=\"lg:w-52\" />\r\n            </div>\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">\r\n                Episode Progress\r\n              </div>\r\n              <InputNumber step={1} max=\"999\" min=\"0\" className=\"lg:w-52\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row block lg:flex justify-between\">\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">\r\n                Start Date\r\n              </div>\r\n              <DatePicker className=\"lg:w-52\" />\r\n            </div>\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">\r\n                Finish Date\r\n              </div>\r\n              <DatePicker className=\"lg:w-52\" />\r\n            </div>\r\n            <div className=\"\">\r\n              <div className=\"title text-gray-400 font-medium my-2\">\r\n                Total Rewatches\r\n              </div>\r\n              <InputNumber step={1} min={0} max=\"999\" className=\"lg:w-52\" />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"title text-gray-400 font-medium my-2\">Notes</div>\r\n            <Textarea />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Navbar.js",["93"],"import React, { useState } from \"react\";\r\n\r\nconst Navbar = () => {\r\n  const [menus, setMenus] = useState([\r\n    \"Home\",\r\n    \"Profile\",\r\n    \"Anime List\",\r\n    \"Manga List\",\r\n    \"Browse\",\r\n    \"Forum\",\r\n  ]);\r\n  const menuList = menus.map((menu, index) => (\r\n    <li\r\n      key={index}\r\n      className=\"lg:mx-3 my-2 lg:py-4 font-semibold text-gray-500 hover:text-gray-200 cursor-pointer text-sm\"\r\n    >\r\n      {menu}\r\n    </li>\r\n  ));\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <nav className=\"bg-gray-800 w-full\">\r\n      <div className=\"container lg:flex mx-auto lg:px-28  items-center h-full justify-between\">\r\n        <div className=\"brand flex justify-between items-center border-b lg:border-none border-gray-600 py-4 px-3  text-white\">\r\n          <a href=\"/\" className=\"text-2xl\">\r\n            TekAnime\r\n          </a>\r\n          <svg\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            viewBox=\"0 0 20 20\"\r\n            fill=\"currentColor\"\r\n            className=\"h-5 w-5 lg:hidden\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? (\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            ) : (\r\n              <path\r\n                fillRule=\"evenodd\"\r\n                d=\"M3 5a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zM3 15a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\"\r\n                clipRule=\"evenodd\"\r\n              />\r\n            )}\r\n          </svg>\r\n        </div>\r\n        <ul\r\n          className={`${\r\n            open ? \"flex\" : \"hidden\"\r\n          } lg:flex px-3 py-2 lg:py-0 justify-between flex-col lg:flex-row`}\r\n        >\r\n          {menuList}\r\n        </ul>\r\n        <div className=\"w-30 hidden lg:block\">asd</div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/Filter.js",["94","95","96","97"],"import React, { useState } from \"react\";\r\nimport Dropdown from \"../input/Dropdown\";\r\nimport Input from \"../input/Input\";\r\n\r\nconst Filter = () => {\r\n  const [items, setItems] = useState([\r\n    \"Action\",\r\n    \"Romance\",\r\n    \"Comedy\",\r\n    \"Adventure\",\r\n    \"Drama\",\r\n    \"Slice of Life\",\r\n    \"Fantasy\",\r\n    \"Supernatural\",\r\n    \"Horor\",\r\n    \"Mystery\",\r\n    \"Psychological\",\r\n    \"Sci-Fi\",\r\n    \"Mecha\",\r\n    \"Harem\",\r\n    \"Reverse Harem\",\r\n    \"Isekai\",\r\n    \"Reverse Isekai\",\r\n    \"Demons\",\r\n    \"Game\",\r\n    \"Ecchi\",\r\n    \"Historical\",\r\n    \"Kids\",\r\n    \"Martial Art\",\r\n    \"Josei\",\r\n    \"Cyberpunk\",\r\n    \"Post-Apocalyptic\",\r\n    \"Police\",\r\n    \"Parody\",\r\n    \"Music\",\r\n    \"School\",\r\n    \"Super Power\",\r\n    \"Space\",\r\n    \"Shounen\",\r\n    \"Shoujo\",\r\n    \"Seinen\",\r\n    \"Sports\",\r\n    \"Tragedy\",\r\n    \"Vampire\",\r\n    \"Yaoi/Shounen-Ai\",\r\n    \"Yuri/Shoujo-Ai\",\r\n    \"Magic\",\r\n    \"Military\",\r\n    \"Hentai\",\r\n  ]);\r\n  const [selectedCategory, setSelectedCategory] = useState([]);\r\n  const [years, setYear] = useState(() => {\r\n    let y = [];\r\n    for (let i = new Date().getFullYear(); i > 1992; i--) {\r\n      y.push(i.toString());\r\n    }\r\n    return y;\r\n  });\r\n  const [selectedYear, setSelectedYear] = useState(\"\");\r\n  const [seasons, setSeasons] = useState([\r\n    \"Winter\",\r\n    \"Spring\",\r\n    \"Summer\",\r\n    \"Fall\",\r\n  ]);\r\n  const [selectedSeason, setSelectedSeason] = useState(\"\");\r\n  const [formats, setFormats] = useState([\r\n    \"TV Show\",\r\n    \"Movie\",\r\n    \"TV Short\",\r\n    \"Special\",\r\n    \"OVA\",\r\n    \"ONA\",\r\n    \"Music\",\r\n  ]);\r\n  const [selectedFormats, setSelectedFormats] = useState([]);\r\n  return (\r\n    <div className=\"filter mb-10\">\r\n      <div className=\"flex justify-between\">\r\n        <div className=\"search\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Search\r\n          </div>\r\n          <Input type=\"text\" className=\"bg-gray-800 w-80 lg:w-full\" />\r\n        </div>\r\n        <div className=\"genres hidden lg:block\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Genres\r\n          </div>\r\n          <Dropdown\r\n            items={items}\r\n            onSelected={setSelectedCategory}\r\n            isMultiSelect\r\n          />\r\n        </div>\r\n        <div className=\"Year hidden lg:block\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Year\r\n          </div>\r\n          <Dropdown items={years} onSelected={setSelectedYear} />\r\n        </div>\r\n        <div className=\"Season hidden lg:block\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Season\r\n          </div>\r\n          <Dropdown items={seasons} onSelected={setSelectedSeason} />\r\n        </div>\r\n        <div className=\"Format hidden lg:block\">\r\n          <div className=\"label text-gray-300 text-lg mb-3 font-semibold\">\r\n            Format\r\n          </div>\r\n          <Dropdown\r\n            items={formats}\r\n            onSelected={setSelectedFormats}\r\n            isMultiSelect\r\n          />\r\n        </div>\r\n      </div>\r\n      {(selectedCategory.length > 0 ||\r\n        selectedFormats.length > 0 ||\r\n        selectedSeason.length > 0 ||\r\n        selectedYear.length > 0) && (\r\n        <div className=\"selected-filter my-5 flex\">\r\n          <svg\r\n            className=\"w-6 h-6 text-gray-400\"\r\n            fill=\"none\"\r\n            stroke=\"currentColor\"\r\n            viewBox=\"0 0 24 24\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth=\"2\"\r\n              d=\"M7 7h.01M7 3h5c.512 0 1.024.195 1.414.586l7 7a2 2 0 010 2.828l-7 7a2 2 0 01-2.828 0l-7-7A1.994 1.994 0 013 12V7a4 4 0 014-4z\"\r\n            ></path>\r\n          </svg>\r\n          <div className=\"w-full flex\">\r\n            {selectedCategory\r\n              .concat(\r\n                selectedYear.concat(selectedSeason.concat(selectedFormats))\r\n              )\r\n              .map((item, index) => {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className=\"mx-1 bg-blue-400 w-max px-2 rounded-lg text-white text-sm\"\r\n                  >\r\n                    {item}\r\n                  </div>\r\n                );\r\n              })}\r\n          </div>\r\n          <div className=\"flex text-gray-500 items-center justify-between w-48\">\r\n            <div className=\"flex text-sm\">\r\n              <svg\r\n                className=\"w-5 h-5 mr-1\"\r\n                fill=\"none\"\r\n                stroke=\"currentColor\"\r\n                viewBox=\"0 0 24 24\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth=\"2\"\r\n                  d=\"M3 4h13M3 8h9m-9 4h9m5-4v12m0 0l-4-4m4 4l4-4\"\r\n                ></path>\r\n              </svg>{\" \"}\r\n              Popularity\r\n            </div>\r\n            <div>|</div>\r\n            <svg\r\n              className=\"w-6 h-6\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M4 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2V6zM14 6a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2V6zM4 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2H6a2 2 0 01-2-2v-2zM14 16a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 01-2 2h-2a2 2 0 01-2-2v-2z\"\r\n              ></path>\r\n            </svg>\r\n            <svg\r\n              className=\"w-6 h-6\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              viewBox=\"0 0 24 24\"\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth=\"2\"\r\n                d=\"M4 6h16M4 10h16M4 14h16M4 18h16\"\r\n              ></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Wrapper.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/screen/Home.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Dropdown.js",["98"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./scrollbar.css\";\r\n\r\nconst Dropdown = ({ items, onSelected, isMultiSelect }) => {\r\n  const wrapperRef = useRef(null);\r\n  const [openInput, setOpenInput] = useState(false);\r\n  const [expand, setExpand] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [selectedItems, setSelectedItems] = useState([]);\r\n  const itemPrep = items.filter((item) =>\r\n    item.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n  const itemList = itemPrep.map((item, index) => (\r\n    <li\r\n      key={index}\r\n      onClick={() => {\r\n        if (!selectedItems.includes(item)) {\r\n          setSearch(\"\");\r\n          return isMultiSelect\r\n            ? setSelectedItems([...selectedItems, item])\r\n            : setSelectedItems([item]);\r\n        }\r\n      }}\r\n      className=\"p-1 flex justify-between rounded-md hover:bg-gray-700 hover:text-blue-400 cursor-default font-semibold text-sm\"\r\n    >\r\n      <div className=\"label\">{item}</div>\r\n      {selectedItems.includes(item) ? (\r\n        <svg\r\n          className=\"w-5 h-5 text-blue-500\"\r\n          fill=\"none\"\r\n          stroke=\"currentColor\"\r\n          viewBox=\"0 0 24 24\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <path\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n            strokeWidth=\"2\"\r\n            d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\r\n          ></path>\r\n        </svg>\r\n      ) : null}\r\n    </li>\r\n  ));\r\n  const prefix =\r\n    openInput && selectedItems.length === 0 ? (\r\n      <input\r\n        autoFocus\r\n        type=\"text\"\r\n        onChange={(e) => setSearch(e.target.value)}\r\n        className=\"w-full h-full px-0 text-sm border-none focus:border-none focus:outline-none bg-transparent font-semibold focus:ring-0\"\r\n      />\r\n    ) : (\r\n      <span className=\"w-full\">Any</span>\r\n    );\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setExpand(false);\r\n      setOpenInput(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    onSelected(selectedItems);\r\n  }, [selectedItems]);\r\n  const icon =\r\n    selectedItems.length === 0 ? (\r\n      <svg\r\n        className=\"w-6 h-6\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d={expand ? \"M5 15l7-7 7 7\" : \"M19 9l-7 7-7-7\"}\r\n        ></path>\r\n      </svg>\r\n    ) : (\r\n      <svg\r\n        className=\"w-6 h-6\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        onClick={() => setSelectedItems([])}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M6 18L18 6M6 6l12 12\"\r\n        ></path>\r\n      </svg>\r\n    );\r\n  return (\r\n    <div\r\n      ref={wrapperRef}\r\n      onClick={() => setExpand(true)}\r\n      className=\"dropdown wrapper w-44\"\r\n    >\r\n      <div className=\"bg-gray-800 h-10 rounded-lg flex items-center py-2 px-3 text-sm text-gray-300 font-semibold justify-between\">\r\n        <div className=\"w-full h-full\" onClick={() => setOpenInput(true)}>\r\n          {selectedItems.length === 0 ? (\r\n            prefix\r\n          ) : (\r\n            <div className=\"prefix flex\">\r\n              <div className=\"bg-gray-700 text-xs py-1 px-2 w-max rounded-md mr-1\">\r\n                {selectedItems[0]}\r\n              </div>\r\n              {selectedItems.length > 1 ? (\r\n                <div className=\"bg-gray-700 text-xs py-1 px-2 w-max rounded-md\">\r\n                  + {selectedItems.length - 1}\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          )}\r\n        </div>\r\n        {icon}\r\n      </div>\r\n      {expand && (\r\n        <div className=\"item-list min-h-0 max-h-96 w-44 bg-gray-800 mt-2 rounded-lg text-gray-500 p-3 absolute z-50\">\r\n          <ul>{itemList}</ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nDropdown.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nexport default Dropdown;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Input.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Dropdown2.js",["99"],"import React, { useState, useRef, useEffect } from \"react\";\r\nimport \"./scrollbar.css\";\r\n\r\nconst Dropdown2 = ({ items, onSelected, name, className }) => {\r\n  const wrapperRef = useRef(null);\r\n  const [expand, setExpand] = useState(false);\r\n  const [selectedItem, setSelectedItem] = useState(name);\r\n  const itemList = items.map((item, index) => (\r\n    <li\r\n      key={index}\r\n      onClick={() => setSelectedItem(item)}\r\n      className=\"py-2 px-4 hover:bg-gray-200 cursor-default font-semibold text-sm\"\r\n    >\r\n      <div className={`${selectedItem === item ? \"text-blue-500\" : null}`}>\r\n        {item}\r\n      </div>\r\n    </li>\r\n  ));\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setExpand(false);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    onSelected(selectedItem);\r\n  }, [selectedItem]);\r\n  const icon =\r\n    selectedItem === name ? (\r\n      <svg\r\n        className=\"w-4 h-4\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d={expand ? \"M5 15l7-7 7 7\" : \"M19 9l-7 7-7-7\"}\r\n        ></path>\r\n      </svg>\r\n    ) : (\r\n      <svg\r\n        className=\"w-4 h-4\"\r\n        fill=\"none\"\r\n        stroke=\"currentColor\"\r\n        viewBox=\"0 0 24 24\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        onClick={() => setSelectedItem(name)}\r\n      >\r\n        <path\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n          strokeWidth=\"2\"\r\n          d=\"M6 18L18 6M6 6l12 12\"\r\n        ></path>\r\n      </svg>\r\n    );\r\n  return (\r\n    <div ref={wrapperRef} className={`dropdown wrapper relative ${className}`}>\r\n      <div\r\n        onClick={() => setExpand(!expand)}\r\n        className=\"bg-gray-900 rounded-lg flex items-center h-full px-1 w-full text-gray-300 justify-between\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          disabled\r\n          value={!selectedItem ? name : selectedItem}\r\n          className=\"bg-transparent border-0 focus:border-0 focus:ring-0 text-white w-1/2\"\r\n        />\r\n        {icon}\r\n      </div>\r\n      {expand && (\r\n        <div className=\"item-list min-h-0 max-h-96 w-full bg-white mt-2 rounded text-gray-400 absolute z-50\">\r\n          <ul>{itemList}</ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nDropdown2.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nexport default Dropdown2;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/InputNumber.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/Textarea.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/input/DatePicker.js",["100","101","102","103","104","105","106","107"],"import React, { useState, useEffect, useRef } from \"react\";\r\nimport { motion } from \"framer-motion\";\r\n\r\nconst DatePicker = ({ className }) => {\r\n  const [monthNames, setMonthNames] = useState([\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ]);\r\n  const [daysName, setDaysName] = useState([\r\n    \"Sun\",\r\n    \"Mon\",\r\n    \"Tue\",\r\n    \"Wed\",\r\n    \"Thu\",\r\n    \"Fri\",\r\n    \"Sat\",\r\n  ]);\r\n  const [showDatepicker, setShowDatepicker] = useState(false);\r\n  const [month, setMonth] = useState(\"\");\r\n  const [year, setYear] = useState(\"\");\r\n  const [noOfDays, setNoOfDays] = useState([]);\r\n  const [blankDays, setBlankDays] = useState([]);\r\n  const [datePickerValue, setDatePickerValue] = useState(\"\");\r\n\r\n  const wrapperRef = useRef(null);\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const initDate = () => {\r\n    let today = new Date();\r\n    setMonth(today.getMonth());\r\n    setYear(today.getFullYear());\r\n  };\r\n  const isToday = (date) => {\r\n    const today = new Date();\r\n    const d = new Date(year, month, date);\r\n\r\n    return today.toDateString() === d.toDateString() ? true : false;\r\n  };\r\n\r\n  const getDateValue = (date) => {\r\n    let selectedDate = new Date(year, month, date);\r\n    setDatePickerValue(selectedDate.toDateString());\r\n\r\n    inputRef.current.value =\r\n      selectedDate.getFullYear() +\r\n      \"-\" +\r\n      (\"0\" + selectedDate.getMonth()).slice(-2) +\r\n      \"-\" +\r\n      (\"0\" + selectedDate.getDate()).slice(-2);\r\n\r\n    setShowDatepicker(false);\r\n  };\r\n\r\n  const getNoOfDays = () => {\r\n    let daysInMonth = new Date(year, month + 1, 0).getDate();\r\n\r\n    let dayOfWeek = new Date(year, month).getDay();\r\n    let blankdaysArray = [];\r\n    for (var i = 1; i <= dayOfWeek; i++) {\r\n      blankdaysArray.push(i);\r\n    }\r\n\r\n    let daysArray = [];\r\n    for (var i = 1; i <= daysInMonth; i++) {\r\n      daysArray.push(i);\r\n    }\r\n\r\n    setBlankDays(blankDays);\r\n    setNoOfDays(daysArray);\r\n\r\n    console.log(daysName);\r\n  };\r\n\r\n  const onEscape = (e) => {\r\n    if (e.keyCode === 27) {\r\n      setShowDatepicker(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initDate();\r\n    getNoOfDays();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    document.addEventListener(\"click\", handleClickOutside, false);\r\n    return () => {\r\n      document.removeEventListener(\"click\", handleClickOutside, false);\r\n    };\r\n  }, []);\r\n\r\n  const handleClickOutside = (event) => {\r\n    if (wrapperRef.current && !wrapperRef.current.contains(event.target)) {\r\n      setShowDatepicker(false);\r\n    }\r\n  };\r\n\r\n  const daysComp = daysName.map((day, index) => {\r\n    return (\r\n      <div style={{ width: \"14.26%\" }} className=\"px-1\" key={index}>\r\n        <div className=\"text-gray-800 font-medium text-center text-xs\">\r\n          {day}\r\n        </div>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div\r\n      className={`relative flex flex-col-reverse ${className}`}\r\n      ref={wrapperRef}\r\n    >\r\n      <div className=\"flex \" onClick={() => setShowDatepicker(!showDatepicker)}>\r\n        <input type=\"hidden\" name=\"date\" ref={inputRef} />\r\n        <input\r\n          type=\"text\"\r\n          readOnly\r\n          value={datePickerValue}\r\n          onChange={(e) => setDatePickerValue(e.target.value)}\r\n          onKeyDown={onEscape}\r\n          className=\"w-full pl-10 bg-gray-900 py-3 border-0 leading-none rounded-lg shadow-sm focus:outline-none focus:ring-0 text-white text-sm\"\r\n        />\r\n        <div className=\"absolute top-0 left-0 px-3 py-2\">\r\n          <svg\r\n            className=\"h-6 w-6 text-gray-400\"\r\n            fill=\"none\"\r\n            viewBox=\"0 0 24 24\"\r\n            stroke=\"currentColor\"\r\n          >\r\n            <path\r\n              strokeLinecap=\"round\"\r\n              strokeLinejoin=\"round\"\r\n              strokeWidth={2}\r\n              d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\r\n            />\r\n          </svg>\r\n        </div>\r\n      </div>\r\n\r\n      {showDatepicker && (\r\n        <>\r\n          <motion.div\r\n            className=\"bg-white mb-14 w-full rounded shadow p-4 absolute\"\r\n            initial={{ scaleY: 0.5 }}\r\n            animate={{ scaleY: 1 }}\r\n          >\r\n            <div className=\"flex justify-between items-center mb-2\">\r\n              <div>\r\n                <span className=\"text-lg font-bold text-gray-800\">\r\n                  {monthNames[month]}\r\n                </span>\r\n                <span className=\"ml-1 text-lg text-gray-600 font-normal\">\r\n                  {year}\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <button\r\n                  className={`transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 p-1 rounded-full ${\r\n                    month == 0 ? \"cursor-not-allowed opacity-25\" : null\r\n                  }`}\r\n                  disabled={month == 0 ? true : false}\r\n                  onClick={(e) => {\r\n                    e.preventDefault();\r\n                    setMonth(month - 1);\r\n                    return getNoOfDays();\r\n                  }}\r\n                >\r\n                  <svg\r\n                    className=\"h-6 w-6 text-gray-500 inline-flex\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M15 19l-7-7 7-7\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className={`transition ease-in-out duration-100 inline-flex cursor-pointer hover:bg-gray-200 p-1 rounded-full ${\r\n                    month == 11 ? \"cursor-not-allowed opacity-25\" : null\r\n                  }`}\r\n                  disabled={month == 11 ? true : false}\r\n                  onClick={() => {\r\n                    setMonth(month + 1);\r\n                    getNoOfDays();\r\n                  }}\r\n                >\r\n                  <svg\r\n                    className=\"h-6 w-6 text-gray-500 inline-flex\"\r\n                    fill=\"none\"\r\n                    viewBox=\"0 0 24 24\"\r\n                    stroke=\"currentColor\"\r\n                  >\r\n                    <path\r\n                      strokeLinecap=\"round\"\r\n                      strokeLinejoin=\"round\"\r\n                      strokeWidth={2}\r\n                      d=\"M9 5l7 7-7 7\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </div>\r\n            </div>\r\n            <div className=\"flex flex-wrap mb-3 -mx-1\">{daysComp}</div>\r\n            <div className=\"flex flex-wrap -mx-1\">\r\n              {blankDays.map((blankDay, index) => {\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    style={{ width: \"14.28%\" }}\r\n                    className=\"text-center border p-1 border-transparent text-sm\"\r\n                  ></div>\r\n                );\r\n              })}\r\n\r\n              {noOfDays.map((date, index) => {\r\n                return (\r\n                  <div\r\n                    style={{ width: \"14.28%\" }}\r\n                    className=\"px-1 mb-1\"\r\n                    key={index}\r\n                  >\r\n                    <div\r\n                      onClick={() => getDateValue(date)}\r\n                      className={`cursor-pointer p-1 text-center text-sm leading-none rounded-full transition ease-in-out duration-100 ${\r\n                        isToday(date) === true\r\n                          ? \"bg-blue-500 text-white\"\r\n                          : \"text-gray-700 hover:bg-blue-200\"\r\n                      } `}\r\n                    >\r\n                      {\" \"}\r\n                      {date}\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </motion.div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DatePicker;\r\n","/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/layouts/ItemsWrapper.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemList.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemSekeleton.js",[],"/home/teguhkurnia/Web Dev/anilist-clone-react-tailwindcss/src/components/Item/ItemSummary.js",["108","109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":7,"column":8,"nodeType":"117","messageId":"118","endLine":7,"endColumn":13},{"ruleId":"115","severity":1,"message":"119","line":12,"column":11,"nodeType":"117","messageId":"118","endLine":12,"endColumn":17},{"ruleId":"120","severity":1,"message":"121","line":25,"column":6,"nodeType":"122","endLine":25,"endColumn":8,"suggestions":"123"},{"ruleId":"115","severity":1,"message":"124","line":27,"column":18,"nodeType":"117","messageId":"118","endLine":27,"endColumn":27},{"ruleId":"115","severity":1,"message":"125","line":36,"column":10,"nodeType":"117","messageId":"118","endLine":36,"endColumn":24},{"ruleId":"126","severity":1,"message":"127","line":73,"column":13,"nodeType":"128","endLine":76,"endColumn":15},{"ruleId":"115","severity":1,"message":"129","line":4,"column":17,"nodeType":"117","messageId":"118","endLine":4,"endColumn":25},{"ruleId":"115","severity":1,"message":"130","line":6,"column":17,"nodeType":"117","messageId":"118","endLine":6,"endColumn":25},{"ruleId":"115","severity":1,"message":"131","line":52,"column":17,"nodeType":"117","messageId":"118","endLine":52,"endColumn":24},{"ruleId":"115","severity":1,"message":"132","line":60,"column":19,"nodeType":"117","messageId":"118","endLine":60,"endColumn":29},{"ruleId":"115","severity":1,"message":"133","line":67,"column":19,"nodeType":"117","messageId":"118","endLine":67,"endColumn":29},{"ruleId":"120","severity":1,"message":"134","line":71,"column":6,"nodeType":"122","endLine":71,"endColumn":21,"suggestions":"135"},{"ruleId":"120","severity":1,"message":"134","line":33,"column":6,"nodeType":"122","endLine":33,"endColumn":20,"suggestions":"136"},{"ruleId":"115","severity":1,"message":"137","line":5,"column":22,"nodeType":"117","messageId":"118","endLine":5,"endColumn":35},{"ruleId":"115","severity":1,"message":"138","line":19,"column":20,"nodeType":"117","messageId":"118","endLine":19,"endColumn":31},{"ruleId":"139","severity":1,"message":"140","line":75,"column":14,"nodeType":"117","messageId":"141","endLine":75,"endColumn":15},{"ruleId":"120","severity":1,"message":"142","line":94,"column":6,"nodeType":"122","endLine":94,"endColumn":8,"suggestions":"143"},{"ruleId":"144","severity":1,"message":"145","line":170,"column":27,"nodeType":"146","messageId":"147","endLine":170,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":172,"column":35,"nodeType":"146","messageId":"147","endLine":172,"endColumn":37},{"ruleId":"144","severity":1,"message":"145","line":196,"column":27,"nodeType":"146","messageId":"147","endLine":196,"endColumn":29},{"ruleId":"144","severity":1,"message":"145","line":198,"column":35,"nodeType":"146","messageId":"147","endLine":198,"endColumn":37},{"ruleId":"148","severity":1,"message":"149","line":25,"column":11,"nodeType":"128","endLine":25,"endColumn":23},{"ruleId":"150","severity":1,"message":"151","line":26,"column":13,"nodeType":"128","endLine":30,"endColumn":15},{"ruleId":"148","severity":1,"message":"149","line":134,"column":11,"nodeType":"128","endLine":134,"endColumn":23},"no-native-reassign",["152"],"no-negated-in-lhs",["153"],"no-unused-vars","'Input' is defined but never used.","Identifier","unusedVar","'isOpen' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleClickOutside'. Either include it or remove the dependency array.","ArrayExpression",["154"],"'setStatus' is assigned a value but never used.","'selectedStatus' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setMenus' is assigned a value but never used.","'setItems' is assigned a value but never used.","'setYear' is assigned a value but never used.","'setSeasons' is assigned a value but never used.","'setFormats' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'onSelected'. Either include it or remove the dependency array. If 'onSelected' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["155"],["156"],"'setMonthNames' is assigned a value but never used.","'setDaysName' is assigned a value but never used.","no-redeclare","'i' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'getNoOfDays'. Either include it or remove the dependency array.",["157"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},"Update the dependencies array to be: [handleClickOutside]",{"range":"166","text":"167"},"Update the dependencies array to be: [onSelected, selectedItems]",{"range":"168","text":"169"},"Update the dependencies array to be: [onSelected, selectedItem]",{"range":"170","text":"171"},"Update the dependencies array to be: [getNoOfDays]",{"range":"172","text":"173"},[955,957],"[handleClickOutside]",[2333,2348],"[onSelected, selectedItems]",[1054,1068],"[onSelected, selectedItem]",[2238,2240],"[getNoOfDays]"]